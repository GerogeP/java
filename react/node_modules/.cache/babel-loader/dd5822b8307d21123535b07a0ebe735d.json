{"ast":null,"code":"var _jsxFileName = \"/Users/panglili/study-react/src/keyshortcuts/keyshortcuts-testall.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function KeyShortcutsTestall() {\n  _s();\n\n  // handle what happens on key press\n  const [keyvalue, setKeyvalue] = React.useState('');\n  const handleKeyPress = useCallback(event => {\n    console.log(`Key pressed: ${event.key}`);\n    setKeyvalue('+++++' + event.key + '+++++ is pressed!');\n    event.key === ' ' && console.log('space pressed');\n  }, []);\n  useEffect(() => {\n    // attach the event listener\n    document.addEventListener('keydown', handleKeyPress); // remove the event listener\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [handleKeyPress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello world, test all shortcuts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: keyvalue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(KeyShortcutsTestall, \"r+KVa43rA0Sj2LzdOEdEkca3bmE=\");\n\n_c = KeyShortcutsTestall;\n\nvar _c;\n\n$RefreshReg$(_c, \"KeyShortcutsTestall\");","map":{"version":3,"names":["React","useCallback","useEffect","KeyShortcutsTestall","keyvalue","setKeyvalue","useState","handleKeyPress","event","console","log","key","document","addEventListener","removeEventListener"],"sources":["/Users/panglili/study-react/src/keyshortcuts/keyshortcuts-testall.tsx"],"sourcesContent":["import React, { useCallback, useEffect } from 'react';\n\nexport default function KeyShortcutsTestall() {\n    // handle what happens on key press\n    const [keyvalue, setKeyvalue] = React.useState('');\n    const handleKeyPress = useCallback((event: any) => {\n        console.log(`Key pressed: ${event.key}`);\n        setKeyvalue('+++++' + event.key + '+++++ is pressed!')\n        event.key === ' ' && console.log('space pressed')\n    }, []);\n\n    useEffect(() => {\n        // attach the event listener\n        document.addEventListener('keydown', handleKeyPress);\n\n        // remove the event listener\n        return () => {\n            document.removeEventListener('keydown', handleKeyPress);\n        };\n    }, [handleKeyPress]);\n\n    return (\n        <div>\n            <h1>Hello world, test all shortcuts</h1>\n            <div>\n                {keyvalue}\n            </div>\n        </div>\n    );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;;AAEA,eAAe,SAASC,mBAAT,GAA+B;EAAA;;EAC1C;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAhC;EACA,MAAMC,cAAc,GAAGN,WAAW,CAAEO,KAAD,IAAgB;IAC/CC,OAAO,CAACC,GAAR,CAAa,gBAAeF,KAAK,CAACG,GAAI,EAAtC;IACAN,WAAW,CAAC,UAAUG,KAAK,CAACG,GAAhB,GAAsB,mBAAvB,CAAX;IACAH,KAAK,CAACG,GAAN,KAAc,GAAd,IAAqBF,OAAO,CAACC,GAAR,CAAY,eAAZ,CAArB;EACH,CAJiC,EAI/B,EAJ+B,CAAlC;EAMAR,SAAS,CAAC,MAAM;IACZ;IACAU,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCN,cAArC,EAFY,CAIZ;;IACA,OAAO,MAAM;MACTK,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCP,cAAxC;IACH,CAFD;EAGH,CARQ,EAQN,CAACA,cAAD,CARM,CAAT;EAUA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,UACKH;IADL;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH;;GA3BuBD,mB;;KAAAA,mB"},"metadata":{},"sourceType":"module"}